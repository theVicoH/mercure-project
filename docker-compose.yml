version: '3'
services:
  backend:
    build: ./backend
    container_name: backend
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    volumes: 
      - ./backend:/app
      - /app/node_modules
    tty: true
    networks:
      - mercure_network

  mercure:
    image: dunglas/mercure
    container_name: mercure
    restart: unless-stopped
    environment:
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT}
    command: /usr/bin/caddy run --config /etc/caddy/Caddyfile.dev
    ports:
      - '8080:80'
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    tty: true
    networks:
      - mercure_network
  
  db:
    image: postgres
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./backend/data:/var/lib/postgresql/data
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    environment: 
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports: 
      - "5432:5432"
    networks: 
      - mercure_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "15432:80"
    depends_on:
      - db
    tty: true
    networks: 
      - mercure_network

volumes:
  mercure_data:
  mercure_config:

networks:
  mercure_network:
    driver: bridge